{"version":3,"sources":["context/RestaurantContext/index.js","components/NavBar/index.js","components/EachMenu/index.js","components/RenderPage/index.js","components/Home/index.js","components/EmptyCartView/index.js","components/LoginForm/index.js","components/CartItem/index.js","components/CartListView/index.js","components/CartRoute/index.js","App.js","index.js"],"names":["RestaurantContext","createContext","withRouter","props","_useContext","useContext","cartList","restaurantName","apiResponse","data","console","log","_jsx","className","children","_jsxs","Link","to","type","AiOutlineShoppingCart","size","length","onClick","history","Cookies","remove","replace","EachMenu","eachItemDetails","addCartItem","_useState","useState","_useState2","_slicedToArray","quantity","setQuantity","dishAvailability","dishCalories","dishCurrency","dishDescription","dishId","dishImage","dishName","dishPrice","dishType","addOnCat","dishTypeImg","src","alt","prevQuantity","_objectSpread","RenderPage","formattedData","menuCategoryId","activeTabs","setActiveTab","map","eachItem","menuCategory","dishesList","filter","categoryDishes","renderMenuItem","Home","_Fragment","NavBar","EmptyCartView","Component","CartItem","removeCartItem","incrementCartItemQuantity","decrementCartItemQuantity","cartItemDetails","onRemoveCartItem","totalPrice","AiFillCloseCircle","color","CartListView","eachCartItem","CartRoute","removeAllCartItems","apiStatusConstant","App","status","errorMsg","setApiResponse","_useState3","_useState4","setCartList","updatedCartList","useEffect","getApiResponse","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","options","response","responseData","updatedData","wrap","_context","prev","next","prevApiResponse","method","fetch","sent","json","ok","restaurant_name","table_menu_list","menu_category","menu_category_id","category_dishes","eachDish","dish_id","dish_name","dish_price","dish_image","dish_currency","dish_calories","dish_description","dish_Availability","dish_Type","addonCat","stop","apply","arguments","Provider","value","product","productObject","find","prevCartList","updatedQuantity","concat","_toConsumableArray","Switch","Route","path","component","exact","renderFailureView","Loader","renderMenuListContainer","ReactDOM","render","React","StrictMode","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.e39fc4a7.chunk.js","sourcesContent":["import {createContext} from 'react'\n\nconst RestaurantContext = createContext(null)\n\nexport default RestaurantContext\n","import {Link, withRouter} from 'react-router-dom'\nimport Cookies from 'js-cookie'\n\nimport {useContext} from 'react'\n\nimport {AiOutlineShoppingCart} from 'react-icons/ai'\n\nimport './index.css'\nimport RestaurantContext from '../../context/RestaurantContext'\n\nconst NavBar = props => {\n  const {cartList, apiResponse} = useContext(RestaurantContext)\n  const {data} = apiResponse\n  const {restaurantName} = data\n\n  const onClickLogout = () => {\n    const {history} = props\n    Cookies.remove('jwt_token')\n    history.replace('/login')\n  }\n\n  console.log(cartList)\n\n  return (\n    <nav className=\"navbar\">\n      <div className=\"nav-container\">\n        <Link to=\"/\" className=\"link-item\">\n          <h1 className=\"web-logo-heading\">{restaurantName}</h1>\n        </Link>\n\n        <div className=\"cart-container\">\n          <p className=\"my-order-menu\">My Orders</p>\n          <Link to=\"/cart\" className=\"link-item\">\n            <button\n              type=\"button\"\n              data-testid=\"cart\"\n              className=\"cart-btn cart-icon-container\"\n            >\n              <AiOutlineShoppingCart size={24} className=\"cart-icon\" />\n              <p className=\"cart-orders\">{cartList.length}</p>\n            </button>\n          </Link>\n\n          <button\n            type=\"button\"\n            className=\"logout-desktop-btn\"\n            onClick={onClickLogout}\n          >\n            Logout\n          </button>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nexport default withRouter(NavBar)\n","import {useState, useContext} from 'react'\nimport './index.css'\nimport RestaurantContext from '../../context/RestaurantContext'\n\nconst EachMenu = props => {\n  const {eachItemDetails} = props\n  const {addCartItem} = useContext(RestaurantContext)\n\n  const [quantity, setQuantity] = useState(0)\n\n  const {\n    dishAvailability,\n    dishCalories,\n    dishCurrency,\n    dishDescription,\n    dishId,\n    dishImage,\n    dishName,\n    dishPrice,\n    dishType,\n    addOnCat,\n  } = eachItemDetails\n\n  const handleMinusSign = () => {\n    setQuantity(prevQuantity => (prevQuantity !== 0 ? prevQuantity - 1 : 0))\n  }\n\n  const handlePlusSign = () => {\n    setQuantity(prevQuantity => prevQuantity + 1)\n  }\n\n  const handleAddCartBtn = () => {\n    addCartItem({...eachItemDetails, quantity})\n  }\n\n  const dishTypeImg =\n    dishType === 1\n      ? 'https://img.icons8.com/?size=48&id=61082&format=png'\n      : `https://img.icons8.com/?size=48&id=61083&format=png`\n\n  return (\n    <li className=\"eachItem\">\n      <div className=\"dish-type-and-dish-details\">\n        <img src={dishTypeImg} alt={dishName} className=\"dish-type-img\" />\n        <div className=\"dish-details-container\">\n          <h1 className=\"dish-name\">{dishName}</h1>\n          <p className=\"sar-val\">\n            {dishCurrency} {dishPrice}\n          </p>\n          <p className=\"dish-desc\">{dishDescription}</p>\n          {dishAvailability ? (\n            <div className=\"add-on-container\">\n              <button\n                type=\"button\"\n                className=\"add-sub-btn\"\n                onClick={handleMinusSign}\n              >\n                -\n              </button>\n              <p className=\"number-dish\">{quantity}</p>\n              <button\n                type=\"button\"\n                className=\"add-sub-btn\"\n                onClick={handlePlusSign}\n              >\n                +\n              </button>\n            </div>\n          ) : (\n            <p className=\"not-available-error\">Not available</p>\n          )}\n          {quantity > 0 && (\n            <button\n              type=\"button\"\n              onClick={handleAddCartBtn}\n              className=\"add-cart-btn\"\n            >\n              ADD TO CART\n            </button>\n          )}\n          {addOnCat.length !== 0 && (\n            <p className=\"custom-avail\">Customizations available</p>\n          )}\n        </div>\n      </div>\n      <div className=\"calories-and-image\">\n        <div className=\"dish-calories-section\">\n          <p className=\"calories\">{dishCalories} calories</p>\n        </div>\n        <div>\n          <img src={dishImage} alt={dishId} className=\"dish-img\" />\n        </div>\n      </div>\n    </li>\n  )\n}\n\nexport default EachMenu\n","import {useState, useContext} from 'react'\nimport './index.css'\nimport EachMenu from '../EachMenu'\nimport RestaurantContext from '../../context/RestaurantContext'\n\nconst RenderPage = () => {\n  const {apiResponse} = useContext(RestaurantContext)\n  const {data} = apiResponse\n  const {formattedData} = data\n\n  const [activeTabs, setActiveTab] = useState(formattedData[0].menuCategoryId)\n\n  const renderMenuBar = () => (\n    <ul className=\"menu-tabs\">\n      {formattedData.map(eachItem => (\n        <li\n          className={\n            eachItem.menuCategoryId === activeTabs ? `tabs active` : `tabs`\n          }\n          key={eachItem.menuCategoryId}\n        >\n          <button\n            type=\"submit\"\n            onClick={() => setActiveTab(eachItem.menuCategoryId)}\n            className={\n              eachItem.menuCategoryId === activeTabs\n                ? `tab-btn active`\n                : `tab-btn`\n            }\n          >\n            {eachItem.menuCategory}\n          </button>\n        </li>\n      ))}\n    </ul>\n  )\n\n  const renderMenuItem = () => {\n    const filteredData = formattedData.filter(\n      eachItem => eachItem.menuCategoryId === activeTabs,\n    )\n\n    const dishesList = filteredData[0].categoryDishes\n\n    return (\n      <div className=\"menu-item-container\">\n        <ul className=\"menu-item-card-container\">\n          {dishesList.map(eachItem => (\n            <EachMenu key={eachItem.dishId} eachItemDetails={eachItem} />\n          ))}\n        </ul>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      {renderMenuBar()}\n      {renderMenuItem()}\n    </div>\n  )\n}\n\nexport default RenderPage\n","import './index.css'\nimport NavBar from '../NavBar'\n\nimport RenderPage from '../RenderPage'\n\nconst Home = () => (\n  <>\n    <NavBar />\n    <div className=\"menu-category-container\">\n      <RenderPage />\n    </div>\n  </>\n)\n\nexport default Home\n","import {Link} from 'react-router-dom'\n\nimport './index.css'\n\nconst EmptyCartView = () => (\n  <div className=\"cart-empty-view-container\">\n    <img\n      src=\"https://assets.ccbp.in/frontend/react-js/nxt-trendz-empty-cart-img.png\"\n      className=\"cart-empty-img\"\n      alt=\"cart empty\"\n    />\n    <h1 className=\"cart-empty-heading\">Your Cart Is Empty</h1>\n\n    <Link to=\"/\">\n      <button type=\"button\" className=\"shop-now-btn\">\n        Shop Now\n      </button>\n    </Link>\n  </div>\n)\n\nexport default EmptyCartView\n","import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport {Redirect} from 'react-router-dom'\n\nimport './index.css'\n\nclass LoginForm extends Component {\n  state = {\n    username: 'rahul',\n    password: 'rahul@2021',\n    showSubmitError: false,\n    errorMsg: '',\n  }\n\n  onChangeUsername = event => {\n    this.setState({username: event.target.value})\n  }\n\n  onChangePassword = event => {\n    this.setState({password: event.target.value})\n  }\n\n  onSubmitSuccess = jwtToken => {\n    const {history} = this.props\n\n    Cookies.set('jwt_token', jwtToken, {\n      expires: 30,\n    })\n    history.replace('/')\n  }\n\n  onSubmitFailure = errorMsg => {\n    this.setState({showSubmitError: true, errorMsg})\n  }\n\n  submitForm = async event => {\n    event.preventDefault()\n    const {username, password} = this.state\n    const userDetails = {username, password}\n    const url = 'https://apis.ccbp.in/login'\n    const options = {\n      method: 'POST',\n      body: JSON.stringify(userDetails),\n    }\n    const response = await fetch(url, options)\n    const data = await response.json()\n    if (response.ok === true) {\n      this.onSubmitSuccess(data.jwt_token)\n    } else {\n      this.onSubmitFailure(data.error_msg)\n    }\n  }\n\n  renderPasswordField = () => {\n    const {password} = this.state\n\n    return (\n      <>\n        <label className=\"input-label\" htmlFor=\"password\">\n          PASSWORD\n        </label>\n        <input\n          type=\"password\"\n          id=\"password\"\n          className=\"password-input-field\"\n          value={password}\n          onChange={this.onChangePassword}\n          placeholder=\"Password\"\n        />\n      </>\n    )\n  }\n\n  renderUsernameField = () => {\n    const {username} = this.state\n\n    return (\n      <>\n        <label className=\"input-label\" htmlFor=\"username\">\n          USERNAME\n        </label>\n        <input\n          type=\"text\"\n          id=\"username\"\n          className=\"username-input-field\"\n          value={username}\n          onChange={this.onChangeUsername}\n          placeholder=\"Username\"\n        />\n      </>\n    )\n  }\n\n  render() {\n    const {showSubmitError, errorMsg} = this.state\n    const jwtToken = Cookies.get('jwt_token')\n\n    if (jwtToken !== undefined) {\n      return <Redirect to=\"/\" />\n    }\n\n    return (\n      <div className=\"login-form-container\">\n        <form className=\"form-container\" onSubmit={this.submitForm}>\n          <div className=\"input-container\">{this.renderUsernameField()}</div>\n          <div className=\"input-container\">{this.renderPasswordField()}</div>\n          <button type=\"submit\" className=\"login-button\">\n            Login\n          </button>\n          {showSubmitError && <p className=\"error-message\">*{errorMsg}</p>}\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default LoginForm\n","/* eslint-disable prettier/prettier */\n\nimport {useContext} from 'react'\nimport {AiFillCloseCircle} from 'react-icons/ai'\nimport './index.css'\nimport RestaurantContext from '../../context/RestaurantContext'\n\nconst CartItem = props => {\n  const {\n    removeCartItem,\n    incrementCartItemQuantity,\n    decrementCartItemQuantity,\n  } = useContext(RestaurantContext)\n\n  const {cartItemDetails} = props\n  const {\n    dishId,\n    dishName,\n    dishCalories,\n    quantity,\n    dishPrice,\n    dishImage,\n  } = cartItemDetails\n\n  const onClickDecrement = () => {\n    decrementCartItemQuantity(dishId)\n  }\n\n  const onClickIncrement = () => {\n    incrementCartItemQuantity(dishId)\n  }\n  const onRemoveCartItem = () => {\n    removeCartItem(dishId)\n  }\n  const totalPrice = dishPrice * quantity\n\n  // TODO: Update the functionality to increment and decrement quantity of the cart item\n\n  return (\n    <li className=\"cart-item\">\n      <img className=\"cart-product-image\" src={dishImage} alt={dishName} />\n      <div className=\"cart-item-details-container\">\n        <div className=\"cart-product-title-brand-container\">\n          <p className=\"cart-product-title\">{dishName}</p>\n          <p className=\"cart-product-brand\">by {dishCalories}</p>\n        </div>\n        <div className=\"cart-quantity-container\">\n          <button\n            type=\"button\"\n            className=\"quantity-controller-button\"\n            data-testid=\"minus\"\n            onClick={onClickDecrement}\n          >\n            -\n          </button>\n          <p className=\"cart-quantity\">{quantity}</p>\n          <button\n            type=\"button\"\n            className=\"quantity-controller-button\"\n            data-testid=\"plus\"\n            onClick={onClickIncrement}\n          >\n            +\n          </button>\n        </div>\n        <div className=\"total-price-remove-container\">\n          <p className=\"cart-total-price\">Rs {totalPrice}/-</p>\n          <button\n            className=\"remove-button\"\n            type=\"button\"\n            onClick={onRemoveCartItem}\n          >\n            Remove\n          </button>\n        </div>\n      </div>\n      <button\n        className=\"delete-button\"\n        type=\"button\"\n        onClick={onRemoveCartItem}\n        data-testid=\"remove\"\n      >\n        <AiFillCloseCircle color=\"#616E7C\" size={20} />\n      </button>\n    </li>\n  )\n}\n\nexport default CartItem\n","import {useContext} from 'react'\nimport CartItem from '../CartItem'\n\nimport './index.css'\nimport RestaurantContext from '../../context/RestaurantContext'\n\nconst CartListView = () => {\n  const {cartList} = useContext(RestaurantContext)\n\n  return (\n    <ul className=\"cart-list\">\n      {cartList.map(eachCartItem => (\n        <CartItem key={eachCartItem.dishId} cartItemDetails={eachCartItem} />\n      ))}\n    </ul>\n  )\n}\n\nexport default CartListView\n","import {useContext} from 'react'\nimport './index.css'\nimport NavBar from '../NavBar'\nimport EmptyCartView from '../EmptyCartView'\n\nimport RestaurantContext from '../../context/RestaurantContext'\nimport CartListView from '../CartListView'\n\nconst CartRoute = () => {\n  const {cartList, removeAllCartItems} = useContext(RestaurantContext)\n  console.log(cartList)\n\n  const onClickRemoveAllBtn = () => removeAllCartItems()\n\n  return (\n    <>\n      <NavBar />\n      <div className=\"cart-container\">\n        {cartList.length === 0 ? (\n          <EmptyCartView />\n        ) : (\n          <div className=\"cart-content-container\">\n            <h1 className=\"cart-heading\">My Cart</h1>\n            <button\n              type=\"button\"\n              className=\"remove-all-btn\"\n              onClick={onClickRemoveAllBtn}\n            >\n              Remove All\n            </button>\n            <CartListView />\n\n            {/* <CartSummary /> */}\n          </div>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default CartRoute\n","import {Switch, Route} from 'react-router-dom'\nimport {useState, useEffect} from 'react'\nimport Loader from 'react-loader-spinner'\nimport './App.css'\nimport Home from './components/Home'\nimport ProtectedRoute from './components/ProtectedRoute'\nimport LoginForm from './components/LoginForm'\nimport RestaurantContext from './context/RestaurantContext'\nimport CartRoute from './components/CartRoute'\n\nconst apiStatusConstant = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS',\n}\n\n// write your code here\nconst App = () => {\n  const [apiResponse, setApiResponse] = useState({\n    status: apiStatusConstant.initial,\n    data: null,\n    errorMsg: null,\n  })\n\n  const [cartList, setCartList] = useState([])\n\n  const removeAllCartItems = () => {\n    setCartList([])\n  }\n\n  const removeCartItem = dishId => {\n    const updatedCartList = cartList.filter(\n      eachCartItem => eachCartItem.dishId !== dishId,\n    )\n\n    setCartList(updatedCartList)\n  }\n\n  const incrementCartItemQuantity = dishId => {\n    setCartList(prevCartList =>\n      prevCartList.map(eachCartItem => {\n        if (dishId === eachCartItem.dishId) {\n          const updatedQuantity = eachCartItem.quantity + 1\n          return {...eachCartItem, quantity: updatedQuantity}\n        }\n        return eachCartItem\n      }),\n    )\n  }\n\n  const decrementCartItemQuantity = dishId => {\n    const productObject = cartList.find(\n      eachCartItem => eachCartItem.dishId === dishId,\n    )\n    if (productObject.quantity > 1) {\n      setCartList(prevCartList =>\n        prevCartList.map(eachCartItem => {\n          if (dishId === eachCartItem.dishId) {\n            const updatedQuantity = eachCartItem.quantity - 1\n            return {...eachCartItem, quantity: updatedQuantity}\n          }\n          return eachCartItem\n        }),\n      )\n    } else {\n      removeCartItem(dishId)\n    }\n  }\n\n  //   //   TODO: Add your code for remove all cart items, increment cart item quantity, decrement cart item quantity, remove cart item\n\n  const addCartItem = product => {\n    const productObject = cartList.find(\n      eachCartItem => eachCartItem.dishId === product.dishId,\n    )\n\n    if (productObject) {\n      setCartList(prevCartList =>\n        prevCartList.map(eachCartItem => {\n          if (productObject.dishId === eachCartItem.dishId) {\n            const updatedQuantity = eachCartItem.quantity + product.quantity\n\n            return {...eachCartItem, quantity: updatedQuantity}\n          }\n          return eachCartItem\n        }),\n      )\n    } else {\n      setCartList(prevCartList => [...prevCartList, product])\n    }\n  }\n\n  useEffect(() => {\n    const getApiResponse = async () => {\n      setApiResponse(prevApiResponse => ({\n        ...prevApiResponse,\n        status: apiStatusConstant.inProgress,\n      }))\n\n      const url = `https://run.mocky.io/v3/77a7e71b-804a-4fbd-822c-3e365d3482cc`\n      const options = {\n        method: 'GET',\n      }\n      const response = await fetch(url, options)\n      const responseData = await response.json()\n      console.log(responseData)\n\n      if (response.ok) {\n        const updatedData = {\n          restaurantName: responseData[0].restaurant_name,\n          formattedData: responseData[0].table_menu_list.map(eachItem => ({\n            menuCategory: eachItem.menu_category,\n            menuCategoryId: eachItem.menu_category_id,\n            categoryDishes: eachItem.category_dishes.map(eachDish => ({\n              dishId: eachDish.dish_id,\n              dishName: eachDish.dish_name,\n              dishPrice: eachDish.dish_price,\n              dishImage: eachDish.dish_image,\n              dishCurrency: eachDish.dish_currency,\n              dishCalories: eachDish.dish_calories,\n              dishDescription: eachDish.dish_description,\n              dishAvailability: eachDish.dish_Availability,\n              dishType: eachDish.dish_Type,\n              addOnCat: eachDish.addonCat,\n            })),\n          })),\n        }\n        console.log(updatedData)\n        setApiResponse(prevApiResponse => ({\n          ...prevApiResponse,\n          data: updatedData,\n          status: apiStatusConstant.success,\n        }))\n      } else {\n        setApiResponse(prevApiResponse => ({\n          ...prevApiResponse,\n          status: apiStatusConstant.failure,\n          errorMsg: responseData.errorMsg,\n        }))\n      }\n    }\n\n    getApiResponse()\n  }, [])\n\n  const renderSuccessView = () => (\n    <>\n      <Route path=\"/\" component={Home} />\n      <Route exact path=\"/cart\" component={CartRoute} />\n    </>\n  )\n\n  const renderFailureView = () => {\n    const {errorMsg} = apiResponse\n    return <div className=\"failure-view\">{errorMsg}</div>\n  }\n  const renderLoadingView = () => (\n    <div className=\"loader-view\">\n      <Loader color=\"#000000\" size={50} />\n    </div>\n  )\n\n  const renderMenuListContainer = () => {\n    const {status} = apiResponse\n\n    switch (status) {\n      case apiStatusConstant.success:\n        return renderSuccessView()\n      case apiStatusConstant.failure:\n        return renderFailureView()\n      case apiStatusConstant.inProgress:\n        return renderLoadingView()\n\n      default:\n        return null\n    }\n  }\n\n  return (\n    <RestaurantContext.Provider\n      value={{\n        apiResponse,\n        cartList,\n        addCartItem,\n        removeCartItem,\n        decrementCartItemQuantity,\n        removeAllCartItems,\n        incrementCartItemQuantity,\n      }}\n    >\n      <div className=\"page-container\">\n        <Switch>{renderMenuListContainer()}</Switch>\n      </div>\n    </RestaurantContext.Provider>\n  )\n}\n\nexport default App\n","import {BrowserRouter} from 'react-router-dom'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}